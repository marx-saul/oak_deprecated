func(N) add:N a:N b:N = a+b;
assert add 1 2 == 3;
assert add 1.3 2.3 == 3.4;

let succ = add 1;
assert succ 5 == 6;

let succ2 = add ? 1;
assert succ 6 == 7;

map(a,b) map:[b] f:a->b xs:[a]

////////////

func(N):N->N->N add x y = x+y;
map(a,b):(a->b)->[a]->[b] map f xs = 
	[] when xs.empty else
	map f (xs !! 0 .. $-1) ~ f xs!$
